import{ApolloServer as e}from"@apollo/server";import{startStandaloneServer as n}from"@apollo/server/standalone";import{v4 as r}from"uuid";var t=[{id:r(),name:"Rene c",email:"test@test.cl",role:{name:"admin"}},{id:r(),name:"Jane Doe",email:"test2@test2,cl",role:{name:"user"}}],o=new e({typeDefs:"#graphql\n    type User {\n        id: ID\n        name: String\n        email: String\n        role: Role\n    }\n\n    input UserID {\n        uid: ID\n    }\n\n    type Role {\n        name: String\n    }\n\n    type Query {\n        users: [User]\n        user(id: UserID!): [User]\n        #user(id: UserID!): User #con find\n        roles: [Role]\n    }\n",resolvers:{Query:{users:function(){return t},user:function(e,n,r,o){var s=n.id.uid;return t.filter(function(e){return e.id===s})}}}}),s=(await n(o,{listen:{port:4e3}})).url;console.log("Server ready at ".concat(s));